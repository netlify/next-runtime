// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`onBuild() generates a file referencing all page sources 1`] = `
"// This file is purely to allow nft to know about these pages. It should be temporary.
exports.resolvePages = () => {
    try {
        require.resolve('../../../.next/server/pages/_app.js')
        require.resolve('../../../.next/server/pages/_document.js')
        require.resolve('../../../.next/server/pages/_error.js')
        require.resolve('../../../.next/server/pages/api/enterPreview.js')
        require.resolve('../../../.next/server/pages/api/exitPreview.js')
        require.resolve('../../../.next/server/pages/api/hello-background.js')
        require.resolve('../../../.next/server/pages/api/hello.js')
        require.resolve('../../../.next/server/pages/api/shows/[...params].js')
        require.resolve('../../../.next/server/pages/api/shows/[id].js')
        require.resolve('../../../.next/server/pages/deep/import.js')
        require.resolve('../../../.next/server/pages/getServerSideProps/[id].js')
        require.resolve('../../../.next/server/pages/getServerSideProps/all/[[...slug]].js')
        require.resolve('../../../.next/server/pages/getServerSideProps/static.js')
        require.resolve('../../../.next/server/pages/getStaticProps/[id].js')
        require.resolve('../../../.next/server/pages/getStaticProps/env.js')
        require.resolve('../../../.next/server/pages/getStaticProps/static.js')
        require.resolve('../../../.next/server/pages/getStaticProps/with-revalidate.js')
        require.resolve('../../../.next/server/pages/getStaticProps/withFallback/[...slug].js')
        require.resolve('../../../.next/server/pages/getStaticProps/withFallback/[id].js')
        require.resolve('../../../.next/server/pages/getStaticProps/withFallbackBlocking/[id].js')
        require.resolve('../../../.next/server/pages/getStaticProps/withRevalidate/[id].js')
        require.resolve('../../../.next/server/pages/getStaticProps/withRevalidate/withFallback/[id].js')
        require.resolve('../../../.next/server/pages/index.js')
        require.resolve('../../../.next/server/pages/middle/_middleware.js')
        require.resolve('../../../.next/server/pages/previewTest.js')
        require.resolve('../../../.next/server/pages/shows/[...params].js')
        require.resolve('../../../.next/server/pages/shows/[id].js')
    } catch {}
}"
`;

exports[`onBuild() generates a file referencing all page sources 2`] = `
"// This file is purely to allow nft to know about these pages. It should be temporary.
exports.resolvePages = () => {
    try {
        require.resolve('../../../.next/server/pages/_app.js')
        require.resolve('../../../.next/server/pages/_document.js')
        require.resolve('../../../.next/server/pages/_error.js')
        require.resolve('../../../.next/server/pages/api/enterPreview.js')
        require.resolve('../../../.next/server/pages/api/exitPreview.js')
        require.resolve('../../../.next/server/pages/api/hello-background.js')
        require.resolve('../../../.next/server/pages/api/hello.js')
        require.resolve('../../../.next/server/pages/api/shows/[...params].js')
        require.resolve('../../../.next/server/pages/api/shows/[id].js')
        require.resolve('../../../.next/server/pages/deep/import.js')
        require.resolve('../../../.next/server/pages/getServerSideProps/[id].js')
        require.resolve('../../../.next/server/pages/getServerSideProps/all/[[...slug]].js')
        require.resolve('../../../.next/server/pages/getServerSideProps/static.js')
        require.resolve('../../../.next/server/pages/getStaticProps/[id].js')
        require.resolve('../../../.next/server/pages/getStaticProps/env.js')
        require.resolve('../../../.next/server/pages/getStaticProps/static.js')
        require.resolve('../../../.next/server/pages/getStaticProps/with-revalidate.js')
        require.resolve('../../../.next/server/pages/getStaticProps/withFallback/[...slug].js')
        require.resolve('../../../.next/server/pages/getStaticProps/withFallback/[id].js')
        require.resolve('../../../.next/server/pages/getStaticProps/withFallbackBlocking/[id].js')
        require.resolve('../../../.next/server/pages/getStaticProps/withRevalidate/[id].js')
        require.resolve('../../../.next/server/pages/getStaticProps/withRevalidate/withFallback/[id].js')
        require.resolve('../../../.next/server/pages/index.js')
        require.resolve('../../../.next/server/pages/middle/_middleware.js')
        require.resolve('../../../.next/server/pages/previewTest.js')
        require.resolve('../../../.next/server/pages/shows/[...params].js')
        require.resolve('../../../.next/server/pages/shows/[id].js')
    } catch {}
}"
`;

exports[`onBuild() generates static files manifest 1`] = `Array []`;

exports[`onBuild() writes correct redirects to netlifyConfig 1`] = `
Array [
  Object {
    "from": "/_ipx/*",
    "status": 200,
    "to": "/.netlify/builders/_ipx",
  },
  Object {
    "force": true,
    "from": "/_next/data/build-id/en/getStaticProps/withRevalidate/1.json",
    "status": 200,
    "to": "/.netlify/functions/___netlify-handler",
  },
  Object {
    "force": true,
    "from": "/_next/data/build-id/en/getStaticProps/withRevalidate/2.json",
    "status": 200,
    "to": "/.netlify/functions/___netlify-handler",
  },
  Object {
    "force": true,
    "from": "/_next/data/build-id/en/getStaticProps/withRevalidate/withFallback/1.json",
    "status": 200,
    "to": "/.netlify/functions/___netlify-handler",
  },
  Object {
    "force": true,
    "from": "/_next/data/build-id/en/getStaticProps/withRevalidate/withFallback/2.json",
    "status": 200,
    "to": "/.netlify/functions/___netlify-handler",
  },
  Object {
    "force": true,
    "from": "/_next/data/build-id/getStaticProps/with-revalidate.json",
    "status": 200,
    "to": "/.netlify/functions/___netlify-handler",
  },
  Object {
    "force": true,
    "from": "/_next/data/build-id/getStaticProps/with-revalidate.json",
    "status": 200,
    "to": "/.netlify/functions/___netlify-handler",
  },
  Object {
    "force": true,
    "from": "/_next/data/build-id/getStaticProps/with-revalidate.json",
    "status": 200,
    "to": "/.netlify/functions/___netlify-handler",
  },
  Object {
    "from": "/_next/data/build-id/getStaticProps/withFallback/:id.json",
    "status": 200,
    "to": "/.netlify/builders/___netlify-odb-handler",
  },
  Object {
    "from": "/_next/data/build-id/getStaticProps/withFallback/:slug/*",
    "status": 200,
    "to": "/.netlify/builders/___netlify-odb-handler",
  },
  Object {
    "from": "/_next/data/build-id/getStaticProps/withFallbackBlocking/:id.json",
    "status": 200,
    "to": "/.netlify/builders/___netlify-odb-handler",
  },
  Object {
    "from": "/_next/data/build-id/getStaticProps/withRevalidate/withFallback/:id.json",
    "status": 200,
    "to": "/.netlify/builders/___netlify-odb-handler",
  },
  Object {
    "from": "/_next/image/*",
    "query": Object {
      "q": ":quality",
      "url": ":url",
      "w": ":width",
    },
    "status": 301,
    "to": "/_ipx/w_:width,q_:quality/:url",
  },
  Object {
    "from": "/_next/static/*",
    "status": 200,
    "to": "/static/:splat",
  },
  Object {
    "from": "/:locale/_next/static/*",
    "status": 200,
    "to": "/static/:splat",
  },
  Object {
    "conditions": Object {
      "Cookie": Array [
        "__prerender_bypass",
        "__next_preview_data",
      ],
    },
    "force": true,
    "from": "/*",
    "status": 200,
    "to": "/.netlify/functions/___netlify-handler",
  },
  Object {
    "from": "/*",
    "status": 200,
    "to": "/.netlify/functions/___netlify-handler",
  },
  Object {
    "from": "/api",
    "status": 200,
    "to": "/.netlify/functions/___netlify-handler",
  },
  Object {
    "from": "/api/*",
    "status": 200,
    "to": "/.netlify/functions/___netlify-handler",
  },
  Object {
    "force": true,
    "from": "/BUILD_ID",
    "status": 404,
    "to": "/404.html",
  },
  Object {
    "force": true,
    "from": "/build-manifest.json",
    "status": 404,
    "to": "/404.html",
  },
  Object {
    "force": true,
    "from": "/cache/*",
    "status": 404,
    "to": "/404.html",
  },
  Object {
    "force": true,
    "from": "/es/getStaticProps/with-revalidate",
    "status": 200,
    "to": "/.netlify/functions/___netlify-handler",
  },
  Object {
    "force": true,
    "from": "/fr/getStaticProps/with-revalidate",
    "status": 200,
    "to": "/.netlify/functions/___netlify-handler",
  },
  Object {
    "force": true,
    "from": "/getStaticProps/with-revalidate",
    "status": 200,
    "to": "/.netlify/functions/___netlify-handler",
  },
  Object {
    "from": "/getStaticProps/withFallback/:id",
    "status": 200,
    "to": "/.netlify/builders/___netlify-odb-handler",
  },
  Object {
    "from": "/getStaticProps/withFallback/:slug/*",
    "status": 200,
    "to": "/.netlify/builders/___netlify-odb-handler",
  },
  Object {
    "from": "/getStaticProps/withFallbackBlocking/:id",
    "status": 200,
    "to": "/.netlify/builders/___netlify-odb-handler",
  },
  Object {
    "force": true,
    "from": "/getStaticProps/withRevalidate/1",
    "status": 200,
    "to": "/.netlify/functions/___netlify-handler",
  },
  Object {
    "force": true,
    "from": "/getStaticProps/withRevalidate/2",
    "status": 200,
    "to": "/.netlify/functions/___netlify-handler",
  },
  Object {
    "from": "/getStaticProps/withRevalidate/withFallback/:id",
    "status": 200,
    "to": "/.netlify/builders/___netlify-odb-handler",
  },
  Object {
    "force": true,
    "from": "/getStaticProps/withRevalidate/withFallback/1",
    "status": 200,
    "to": "/.netlify/functions/___netlify-handler",
  },
  Object {
    "force": true,
    "from": "/getStaticProps/withRevalidate/withFallback/2",
    "status": 200,
    "to": "/.netlify/functions/___netlify-handler",
  },
  Object {
    "force": true,
    "from": "/prerender-manifest.json",
    "status": 404,
    "to": "/404.html",
  },
  Object {
    "force": true,
    "from": "/react-loadable-manifest.json",
    "status": 404,
    "to": "/404.html",
  },
  Object {
    "force": true,
    "from": "/routes-manifest.json",
    "status": 404,
    "to": "/404.html",
  },
  Object {
    "force": true,
    "from": "/server/*",
    "status": 404,
    "to": "/404.html",
  },
  Object {
    "force": true,
    "from": "/serverless/*",
    "status": 404,
    "to": "/404.html",
  },
  Object {
    "force": true,
    "from": "/traces",
    "status": 404,
    "to": "/404.html",
  },
]
`;
