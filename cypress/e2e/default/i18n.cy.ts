describe('Localization', () => {
  it('should use sub routing to determine current locale', () => {
    cy.visit('/');

    cy.findByText('The current locale is en')

    cy.visit('/fr')
    cy.findByText('The current locale is fr')
  })

  it('should use the NEXT_LOCALE cookie to determine the default locale', () => {
    cy.setCookie('NEXT_LOCALE', 'fr')
    cy.visit('/');

    cy.findByText('The current locale is fr')
  })

  it('should use the NEXT_LOCALE cookie over Accept-Language header to determine the default locale', () => {
    // cy.setCookie('NEXT_LOCALE', 'en')
    cy.visit({
      url: '/',
      headers: {
        'Accept-Language': 'fr;q=0.9'
      }
    });
    cy.findByText('The current locale is fr')

    cy.setCookie('NEXT_LOCALE', 'en')
    cy.visit({
      url: '/',
      headers: {
        'Accept-Language': 'fr;q=0.9'
      }
    });

    cy.findByText('The current locale is en')
  })

  it(`function handler doesn't produce locale when first language in 'Accept-Language' header is not matching any of locales`, () => {
    // make sure we don't use cached results
    cy.setCookie('__prerender_bypass', '1')
    cy.request({
      url: `/`,
      followRedirect: false,
      headers: {
        // jp is not in i18n config, fr is in config
        // Netlify Redirects only match on first language
        // https://docs.netlify.com/routing/redirects/redirect-options/#redirect-by-country-or-language
        // > Language-based redirects always match against the first language reported by the browser in the Accept-Language header regardless of quality value weighting.
        // while Next.js matches on every language: https://github.com/vercel/next.js/blob/5d9597879c46b383d595d6f7b37fd373325b7544/test/unit/accept-headers.test.ts
        'Accept-Language': 'jp, fr;q=0.9',
        Accept: '*/*',
        cookie: '__prerender_bypass=1',
      },
    }).then((response) => {
      // we don't expect for function handler to return a redirect
      // locale redirects should be handled by Netlify redirects
      // otherwise we could wrongly cache locale redirect generated by ODB
      expect(response.status).to.eq(200)
    })
  })
})